version: 2.1

orbs:
  aws-cli: circleci/aws-cli@4.1.1

jobs:
  connect-to-aws:
    docker:
      - image: cimg/aws:2022.06
    steps:
      - checkout

      - run:
          name: Print OIDC Token (Raw)
          command: |
            echo "OIDC Token:"
            echo "${CIRCLE_OIDC_TOKEN}"

      - run:
          name: Assume Role with Web Identity
          command: |
            ROLE_ARN="arn:aws:iam::124355672791:role/Testing"
            SESSION_NAME="circleci-session"
            CREDS=$(aws sts assume-role-with-web-identity \
              --role-arn "$ROLE_ARN" \
              --role-session-name "$SESSION_NAME" \
              --web-identity-token "$CIRCLE_OIDC_TOKEN" \
              --duration-seconds 900 \
              --query 'Credentials.[AccessKeyId,SecretAccessKey,SessionToken]' \
              --output text)

            if [ -z "$CREDS" ]; then
              echo "Failed to assume role"
              exit 1
            fi

            export AWS_ACCESS_KEY_ID=$(echo $CREDS | awk '{print $1}')
            export AWS_SECRET_ACCESS_KEY=$(echo $CREDS | awk '{print $2}')
            export AWS_SESSION_TOKEN=$(echo $CREDS | awk '{print $3}')

            echo 'export AWS_ACCESS_KEY_ID='${AWS_ACCESS_KEY_ID} >> $BASH_ENV
            echo 'export AWS_SECRET_ACCESS_KEY='${AWS_SECRET_ACCESS_KEY} >> $BASH_ENV
            echo 'export AWS_SESSION_TOKEN='${AWS_SESSION_TOKEN} >> $BASH_ENV

            echo "Assume role with web identity succeeded"

      - run:
          name: Verify AWS Connection
          command: |
            source $BASH_ENV
            aws sts get-caller-identity
            aws secretsmanager list-secrets --region us-east-1

workflows:
  test-aws-oidc:
    jobs:
      - connect-to-aws
